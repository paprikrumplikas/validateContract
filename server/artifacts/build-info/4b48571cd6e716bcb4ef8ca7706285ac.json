{"id":"4b48571cd6e716bcb4ef8ca7706285ac","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/Counter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract Counter is Ownable, Pausable, ReentrancyGuard {\n    using Counters for Counters.Counter;\n    \n    uint256 public number;\n    Counters.Counter private _incrementCounter;\n    \n    event NumberChanged(address indexed by, uint256 newValue);\n    event NumberReset(address indexed by);\n\n    constructor(uint256 startingValue) {\n        number = startingValue;\n        _transferOwnership(msg.sender);\n    }\n\n    function increment() public nonReentrant whenNotPaused {\n        number++;\n        _incrementCounter.increment();\n        emit NumberChanged(msg.sender, number);\n    }\n\n    // Only owner can pause/unpause\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    // Reset function with access control\n    function reset() public onlyOwner {\n        number = 0;\n        emit NumberReset(msg.sender);\n    }\n\n    // View functions\n    function getIncrementCount() public view returns (uint256) {\n        return _incrementCounter.current();\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[307],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":308,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":307,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,307],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[307],"Pausable":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":308,"src":"130:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Context","nameLocations":["632:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":307,"src":"632:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"632:7:1"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"162:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220,307],"name":"Pausable","nameLocation":"620:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"646:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":123,"name":"Paused","nameLocation":"730:6:1","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:1","nodeType":"VariableDeclaration","scope":123,"src":"737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:1"},"src":"724:30:1"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"760:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":128,"name":"Unpaused","nameLocation":"841:8:1","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:1","nodeType":"VariableDeclaration","scope":128,"src":"850:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:1"},"src":"835:32:1"},{"constant":false,"id":130,"mutability":"mutable","name":"_paused","nameLocation":"886:7:1","nodeType":"VariableDeclaration","scope":220,"src":"873:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":138,"nodeType":"Block","src":"986:32:1","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"996:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"996:15:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"900:67:1","text":" @dev Initializes the contract in unpaused state."},"id":139,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"983:2:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"986:0:1"},"scope":220,"src":"972:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":146,"nodeType":"Block","src":"1229:47:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":142,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1239:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1239:19:1"},{"id":145,"nodeType":"PlaceholderStatement","src":"1268:1:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1024:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":147,"name":"whenNotPaused","nameLocation":"1213:13:1","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"1226:2:1"},"src":"1204:72:1","virtual":false,"visibility":"internal"},{"body":{"id":154,"nodeType":"Block","src":"1476:44:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1486:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"1486:16:1"},{"id":153,"nodeType":"PlaceholderStatement","src":"1512:1:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1282:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":155,"name":"whenPaused","nameLocation":"1463:10:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1473:2:1"},"src":"1454:66:1","virtual":false,"visibility":"internal"},{"body":{"id":163,"nodeType":"Block","src":"1668:31:1","statements":[{"expression":{"id":161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":160,"id":162,"nodeType":"Return","src":"1678:14:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1526:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":164,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1630:2:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"1662:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:1"},"scope":220,"src":"1615:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1818:55:1","statements":[{"expression":{"arguments":[{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1837:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1828:38:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1705:57:1","text":" @dev Throws if the contract is paused."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"1818:0:1"},"scope":220,"src":"1767:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"1993:58:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2011:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2003:41:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1879:61:1","text":" @dev Throws if the contract is not paused."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1968:2:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1993:0:1"},"scope":220,"src":"1945:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":202,"nodeType":"Block","src":"2235:66:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":196,"nodeType":"ExpressionStatement","src":"2245:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2281:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":197,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2274:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"2269:25:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2057:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":203,"implemented":true,"kind":"function","modifiers":[{"id":191,"kind":"modifierInvocation","modifierName":{"id":190,"name":"whenNotPaused","nameLocations":["2221:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2221:13:1"},"nodeType":"ModifierInvocation","src":"2221:13:1"}],"name":"_pause","nameLocation":"2195:6:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2201:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2235:0:1"},"scope":220,"src":"2186:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2481:69:1","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2491:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"2491:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2530:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2521:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2516:27:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2307:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":219,"implemented":true,"kind":"function","modifiers":[{"id":207,"kind":"modifierInvocation","modifierName":{"id":206,"name":"whenPaused","nameLocations":["2470:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":155,"src":"2470:10:1"},"nodeType":"ModifierInvocation","src":"2470:10:1"}],"name":"_unpause","nameLocation":"2442:8:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2450:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2481:0:1"},"scope":220,"src":"2433:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":221,"src":"602:1950:1","usedErrors":[],"usedEvents":[123,128]}],"src":"105:2448:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[285]},"id":286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":285,"linearizedBaseContracts":[285],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":226,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":285,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":229,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":285,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":231,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":285,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":238,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":234,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":235,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":239,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":285,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":242,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":245,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":250,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":255,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":261,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":263,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":285,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":272,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":268,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":269,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":271,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":285,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":283,"nodeType":"Block","src":"3081:43:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":280,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3109:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":278,"id":282,"nodeType":"Return","src":"3091:26:2"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2844:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:2","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"3049:2:2"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"3075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":276,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:2"},"scope":285,"src":"3017:107:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":286,"src":"888:2238:2","usedErrors":[],"usedEvents":[]}],"src":"112:3015:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[307]},"id":308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":287,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":307,"linearizedBaseContracts":[307],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":296,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:3","memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":292,"id":295,"nodeType":"Return","src":"712:17:3"}]},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":307,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:3","memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":301,"id":304,"nodeType":"Return","src":"819:15:3"}]},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":307,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":308,"src":"608:235:3","usedErrors":[],"usedEvents":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[381]},"id":382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":309,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"112:311:4","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":381,"linearizedBaseContracts":[381],"name":"Counters","nameLocation":"432:8:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":313,"members":[{"constant":false,"id":312,"mutability":"mutable","name":"_value","nameLocation":"794:6:4","nodeType":"VariableDeclaration","scope":313,"src":"786:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:4","nodeType":"StructDefinition","scope":381,"src":"447:374:4","visibility":"public"},{"body":{"id":324,"nodeType":"Block","src":"901:38:4","statements":[{"expression":{"expression":{"id":321,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:4","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":312,"src":"918:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":320,"id":323,"nodeType":"Return","src":"911:21:4"}]},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:4","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"counter","nameLocation":"860:7:4","nodeType":"VariableDeclaration","scope":325,"src":"844:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":315,"nodeType":"UserDefinedTypeName","pathNode":{"id":314,"name":"Counter","nameLocations":["844:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"844:7:4"},"referencedDeclaration":313,"src":"844:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:4"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"892:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:4"},"scope":381,"src":"827:112:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":338,"nodeType":"Block","src":"998:70:4","statements":[{"id":337,"nodeType":"UncheckedBlock","src":"1008:54:4","statements":[{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1032:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:4","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":312,"src":"1032:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":336,"nodeType":"ExpressionStatement","src":"1032:19:4"}]}]},"id":339,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:4","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"counter","nameLocation":"980:7:4","nodeType":"VariableDeclaration","scope":339,"src":"964:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":327,"nodeType":"UserDefinedTypeName","pathNode":{"id":326,"name":"Counter","nameLocations":["964:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"964:7:4"},"referencedDeclaration":313,"src":"964:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:4"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"998:0:4"},"scope":381,"src":"945:123:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":366,"nodeType":"Block","src":"1127:176:4","statements":[{"assignments":[346],"declarations":[{"constant":false,"id":346,"mutability":"mutable","name":"value","nameLocation":"1145:5:4","nodeType":"VariableDeclaration","scope":366,"src":"1137:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":349,"initialValue":{"expression":{"id":347,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1153:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:4","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":312,"src":"1153:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"1185:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1177:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"1177:49:4"},{"id":365,"nodeType":"UncheckedBlock","src":"1236:61:4","statements":[{"expression":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":357,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1260:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:4","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":312,"src":"1260:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"1277:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":364,"nodeType":"ExpressionStatement","src":"1260:26:4"}]}]},"id":367,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:4","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"counter","nameLocation":"1109:7:4","nodeType":"VariableDeclaration","scope":367,"src":"1093:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":341,"nodeType":"UserDefinedTypeName","pathNode":{"id":340,"name":"Counter","nameLocations":["1093:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"1093:7:4"},"referencedDeclaration":313,"src":"1093:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:4"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1127:0:4"},"scope":381,"src":"1074:229:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":379,"nodeType":"Block","src":"1358:35:4","statements":[{"expression":{"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":373,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1368:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:4","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":312,"src":"1368:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":378,"nodeType":"ExpressionStatement","src":"1368:18:4"}]},"id":380,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:4","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"counter","nameLocation":"1340:7:4","nodeType":"VariableDeclaration","scope":380,"src":"1324:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":369,"nodeType":"UserDefinedTypeName","pathNode":{"id":368,"name":"Counter","nameLocations":["1324:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"1324:7:4"},"referencedDeclaration":313,"src":"1324:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:4"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1358:0:4"},"scope":381,"src":"1309:84:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":382,"src":"424:971:4","usedErrors":[],"usedEvents":[]}],"src":"87:1309:4"},"id":4},"contracts/Counter.sol":{"ast":{"absolutePath":"contracts/Counter.sol","exportedSymbols":{"Context":[307],"Counter":[493],"Counters":[381],"Ownable":[112],"Pausable":[220],"ReentrancyGuard":[285]},"id":494,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":383,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":113,"src":"58:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":221,"src":"111:55:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":286,"src":"167:62:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":494,"sourceUnit":382,"src":"230:52:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":388,"name":"Ownable","nameLocations":["304:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"304:7:5"},"id":389,"nodeType":"InheritanceSpecifier","src":"304:7:5"},{"baseName":{"id":390,"name":"Pausable","nameLocations":["313:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"313:8:5"},"id":391,"nodeType":"InheritanceSpecifier","src":"313:8:5"},{"baseName":{"id":392,"name":"ReentrancyGuard","nameLocations":["323:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"323:15:5"},"id":393,"nodeType":"InheritanceSpecifier","src":"323:15:5"}],"canonicalName":"Counter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":493,"linearizedBaseContracts":[493,285,220,112,307],"name":"Counter","nameLocation":"293:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":397,"libraryName":{"id":394,"name":"Counters","nameLocations":["351:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"351:8:5"},"nodeType":"UsingForDirective","src":"345:36:5","typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"Counters.Counter","nameLocations":["364:8:5","373:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"364:16:5"},"referencedDeclaration":313,"src":"364:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"functionSelector":"8381f58a","id":399,"mutability":"mutable","name":"number","nameLocation":"406:6:5","nodeType":"VariableDeclaration","scope":493,"src":"391:21:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":402,"mutability":"mutable","name":"_incrementCounter","nameLocation":"443:17:5","nodeType":"VariableDeclaration","scope":493,"src":"418:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage","typeString":"struct Counters.Counter"},"typeName":{"id":401,"nodeType":"UserDefinedTypeName","pathNode":{"id":400,"name":"Counters.Counter","nameLocations":["418:8:5","427:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"418:16:5"},"referencedDeclaration":313,"src":"418:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"anonymous":false,"eventSelector":"70de8034c31e91b3a30e57eac01ac40396721a8183a159e9a0b324a7188386e4","id":408,"name":"NumberChanged","nameLocation":"477:13:5","nodeType":"EventDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"507:2:5","nodeType":"VariableDeclaration","scope":408,"src":"491:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"491:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"519:8:5","nodeType":"VariableDeclaration","scope":408,"src":"511:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"490:38:5"},"src":"471:58:5"},{"anonymous":false,"eventSelector":"16c87ebb1e94c6f651a72ec74217d3d445dd6329a97ea46603f276388ef1719f","id":412,"name":"NumberReset","nameLocation":"540:11:5","nodeType":"EventDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"568:2:5","nodeType":"VariableDeclaration","scope":412,"src":"552:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"551:20:5"},"src":"534:38:5"},{"body":{"id":426,"nodeType":"Block","src":"613:79:5","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":417,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"623:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"startingValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"632:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"623:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":420,"nodeType":"ExpressionStatement","src":"623:22:5"},{"expression":{"arguments":[{"expression":{"id":422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"674:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"678:6:5","memberName":"sender","nodeType":"MemberAccess","src":"674:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":421,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"655:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"655:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"ExpressionStatement","src":"655:30:5"}]},"id":427,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"startingValue","nameLocation":"598:13:5","nodeType":"VariableDeclaration","scope":427,"src":"590:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"590:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:23:5"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"613:0:5"},"scope":493,"src":"578:114:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":448,"nodeType":"Block","src":"753:112:5","statements":[{"expression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"763:8:5","subExpression":{"id":434,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"763:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":436,"nodeType":"ExpressionStatement","src":"763:8:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":437,"name":"_incrementCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"781:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage","typeString":"struct Counters.Counter storage ref"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"799:9:5","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":339,"src":"781:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$313_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$313_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"781:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"781:29:5"},{"eventCall":{"arguments":[{"expression":{"id":443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"839:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:6:5","memberName":"sender","nodeType":"MemberAccess","src":"839:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"851:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"name":"NumberChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"825:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"825:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"EmitStatement","src":"820:38:5"}]},"functionSelector":"d09de08a","id":449,"implemented":true,"kind":"function","modifiers":[{"id":430,"kind":"modifierInvocation","modifierName":{"id":429,"name":"nonReentrant","nameLocations":["726:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"726:12:5"},"nodeType":"ModifierInvocation","src":"726:12:5"},{"id":432,"kind":"modifierInvocation","modifierName":{"id":431,"name":"whenNotPaused","nameLocations":["739:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"739:13:5"},"nodeType":"ModifierInvocation","src":"739:13:5"}],"name":"increment","nameLocation":"707:9:5","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"716:2:5"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"753:0:5"},"scope":493,"src":"698:167:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":457,"nodeType":"Block","src":"941:25:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":454,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"951:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"951:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"ExpressionStatement","src":"951:8:5"}]},"functionSelector":"8456cb59","id":458,"implemented":true,"kind":"function","modifiers":[{"id":452,"kind":"modifierInvocation","modifierName":{"id":451,"name":"onlyOwner","nameLocations":["931:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"931:9:5"},"nodeType":"ModifierInvocation","src":"931:9:5"}],"name":"pause","nameLocation":"916:5:5","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"921:2:5"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"941:0:5"},"scope":493,"src":"907:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":466,"nodeType":"Block","src":"1008:27:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1018:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1018:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"1018:10:5"}]},"functionSelector":"3f4ba83a","id":467,"implemented":true,"kind":"function","modifiers":[{"id":461,"kind":"modifierInvocation","modifierName":{"id":460,"name":"onlyOwner","nameLocations":["998:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"998:9:5"},"nodeType":"ModifierInvocation","src":"998:9:5"}],"name":"unpause","nameLocation":"981:7:5","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"988:2:5"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1008:0:5"},"scope":493,"src":"972:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":481,"nodeType":"Block","src":"1117:65:5","statements":[{"expression":{"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":472,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1127:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1127:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":475,"nodeType":"ExpressionStatement","src":"1127:10:5"},{"eventCall":{"arguments":[{"expression":{"id":477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1164:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1164:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"NumberReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1152:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1152:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"EmitStatement","src":"1147:28:5"}]},"functionSelector":"d826f88f","id":482,"implemented":true,"kind":"function","modifiers":[{"id":470,"kind":"modifierInvocation","modifierName":{"id":469,"name":"onlyOwner","nameLocations":["1107:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1107:9:5"},"nodeType":"ModifierInvocation","src":"1107:9:5"}],"name":"reset","nameLocation":"1092:5:5","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"1097:2:5"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"1117:0:5"},"scope":493,"src":"1083:99:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":491,"nodeType":"Block","src":"1269:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":487,"name":"_incrementCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1286:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$313_storage","typeString":"struct Counters.Counter storage ref"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1304:7:5","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":325,"src":"1286:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$313_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$313_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":486,"id":490,"nodeType":"Return","src":"1279:34:5"}]},"functionSelector":"3c6048ef","id":492,"implemented":true,"kind":"function","modifiers":[],"name":"getIncrementCount","nameLocation":"1219:17:5","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"1236:2:5"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"1260:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1259:9:5"},"scope":493,"src":"1210:110:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":494,"src":"284:1038:5","usedErrors":[],"usedEvents":[13,123,128,408,412]}],"src":"32:1291:5"},"id":5}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c2c8bd46ece4a6af70fd0e71dc51e117bed3290b503d725a5468048fdb26c2b64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x2C8BD46ECE4A6AF70FD0E71DC5 0x1E GT PUSH28 0xED3290B503D725A5468048FDB26C2B64736F6C634300081C00330000 ","sourceMap":"424:971:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c2c8bd46ece4a6af70fd0e71dc51e117bed3290b503d725a5468048fdb26c2b64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x2C8BD46ECE4A6AF70FD0E71DC5 0x1E GT PUSH28 0xED3290B503D725A5468048FDB26C2B64736F6C634300081C00330000 ","sourceMap":"424:971:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"contracts/Counter.sol":{"Counter":{"abi":[{"inputs":[{"internalType":"uint256","name":"startingValue","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"NumberChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"}],"name":"NumberReset","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"getIncrementCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"number","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_139":{"entryPoint":null,"id":139,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_239":{"entryPoint":null,"id":239,"parameterSlots":0,"returnSlots":0},"@_427":{"entryPoint":null,"id":427,"parameterSlots":1,"returnSlots":0},"@_msgSender_297":{"entryPoint":null,"id":297,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":85,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":165,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:200:6","nodeType":"YulBlock","src":"0:200:6","statements":[{"nativeSrc":"6:3:6","nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nativeSrc":"95:103:6","nodeType":"YulBlock","src":"95:103:6","statements":[{"body":{"nativeSrc":"141:16:6","nodeType":"YulBlock","src":"141:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:6","nodeType":"YulLiteral","src":"150:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:6","nodeType":"YulLiteral","src":"153:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:6","nodeType":"YulIdentifier","src":"143:6:6"},"nativeSrc":"143:12:6","nodeType":"YulFunctionCall","src":"143:12:6"},"nativeSrc":"143:12:6","nodeType":"YulExpressionStatement","src":"143:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:6","nodeType":"YulIdentifier","src":"116:7:6"},{"name":"headStart","nativeSrc":"125:9:6","nodeType":"YulIdentifier","src":"125:9:6"}],"functionName":{"name":"sub","nativeSrc":"112:3:6","nodeType":"YulIdentifier","src":"112:3:6"},"nativeSrc":"112:23:6","nodeType":"YulFunctionCall","src":"112:23:6"},{"kind":"number","nativeSrc":"137:2:6","nodeType":"YulLiteral","src":"137:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:6","nodeType":"YulIdentifier","src":"108:3:6"},"nativeSrc":"108:32:6","nodeType":"YulFunctionCall","src":"108:32:6"},"nativeSrc":"105:52:6","nodeType":"YulIf","src":"105:52:6"},{"nativeSrc":"166:26:6","nodeType":"YulAssignment","src":"166:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"182:9:6","nodeType":"YulIdentifier","src":"182:9:6"}],"functionName":{"name":"mload","nativeSrc":"176:5:6","nodeType":"YulIdentifier","src":"176:5:6"},"nativeSrc":"176:16:6","nodeType":"YulFunctionCall","src":"176:16:6"},"variableNames":[{"name":"value0","nativeSrc":"166:6:6","nodeType":"YulIdentifier","src":"166:6:6"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"14:184:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:6","nodeType":"YulTypedName","src":"61:9:6","type":""},{"name":"dataEnd","nativeSrc":"72:7:6","nodeType":"YulTypedName","src":"72:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:6","nodeType":"YulTypedName","src":"84:6:6","type":""}],"src":"14:184:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052348015600f57600080fd5b5060405161063c38038061063c833981016040819052602c9160a5565b6033336055565b6000805460ff60a01b191690556001805560028190556050336055565b5060bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121560b657600080fd5b5051919050565b610570806100cc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638456cb59116100665780638456cb59146100f65780638da5cb5b146100fe578063d09de08a14610119578063d826f88f14610121578063f2fde38b1461012957600080fd5b80633c6048ef146100a35780633f4ba83a146100be5780635c975abb146100c8578063715018a6146100e55780638381f58a146100ed575b600080fd5b6100ab61013c565b6040519081526020015b60405180910390f35b6100c661014c565b005b600054600160a01b900460ff1660405190151581526020016100b5565b6100c661015e565b6100ab60025481565b6100c6610170565b6000546040516001600160a01b0390911681526020016100b5565b6100c6610180565b6100c66101f4565b6100c66101373660046104e3565b61022d565b600061014760035490565b905090565b6101546102ab565b61015c610305565b565b6101666102ab565b61015c600061035a565b6101786102ab565b61015c6103aa565b6101886103ed565b610190610446565b600280549060006101a083610513565b91905055506101b3600380546001019055565b60025460405190815233907f70de8034c31e91b3a30e57eac01ac40396721a8183a159e9a0b324a7188386e49060200160405180910390a261015c60018055565b6101fc6102ab565b6000600281905560405133917f16c87ebb1e94c6f651a72ec74217d3d445dd6329a97ea46603f276388ef1719f91a2565b6102356102ab565b6001600160a01b03811661029f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102a88161035a565b50565b6000546001600160a01b0316331461015c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b61030d610493565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103b2610446565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861033d3390565b60026001540361043f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610296565b6002600155565b600054600160a01b900460ff161561015c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610296565b600054600160a01b900460ff1661015c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610296565b6000602082840312156104f557600080fd5b81356001600160a01b038116811461050c57600080fd5b9392505050565b60006001820161053357634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212206f9fcfabd9d469aa4be6288320820824fda982fc77272f9be0aa20868a0ec7ee64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x63C CODESIZE SUB DUP1 PUSH2 0x63C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2C SWAP2 PUSH1 0xA5 JUMP JUMPDEST PUSH1 0x33 CALLER PUSH1 0x55 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x50 CALLER PUSH1 0x55 JUMP JUMPDEST POP PUSH1 0xBD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 DUP1 PUSH2 0xCC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C6048EF EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x8381F58A EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x15E JUMP JUMPDEST PUSH2 0xAB PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x180 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x15C PUSH2 0x305 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x166 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x15C PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x15C PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x190 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1A0 DUP4 PUSH2 0x513 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1B3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x70DE8034C31E91B3A30E57EAC01AC40396721A8183A159E9A0B324A7188386E4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x15C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x16C87EBB1E94C6F651A72EC74217D3D445DD6329A97EA46603F276388EF1719F SWAP2 LOG2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A8 DUP2 PUSH2 0x35A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x30D PUSH2 0x493 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x33D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x533 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x9FCFABD9D469AA4BE6288320820824FD 0xA9 DUP3 0xFC PUSH24 0x272F9BE0AA20868A0EC7EE64736F6C634300081C00330000 ","sourceMap":"284:1038:5:-:0;;;578:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;1006:5:1;996:15;;-1:-1:-1;;;;996:15:1;;;;1821:22:2;;623:6:5;:22;;;655:30;674:10;655:18;:30::i;:::-;578:114;284:1038;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:184:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:6;;14:184;-1:-1:-1;14:184:6:o;:::-;284:1038:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":683,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_297":{"entryPoint":null,"id":297,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_273":{"entryPoint":null,"id":273,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_265":{"entryPoint":1005,"id":265,"parameterSlots":0,"returnSlots":0},"@_pause_203":{"entryPoint":938,"id":203,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_176":{"entryPoint":1094,"id":176,"parameterSlots":0,"returnSlots":0},"@_requirePaused_187":{"entryPoint":1171,"id":187,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":858,"id":111,"parameterSlots":1,"returnSlots":0},"@_unpause_219":{"entryPoint":773,"id":219,"parameterSlots":0,"returnSlots":0},"@current_325":{"entryPoint":null,"id":325,"parameterSlots":1,"returnSlots":1},"@getIncrementCount_492":{"entryPoint":316,"id":492,"parameterSlots":0,"returnSlots":1},"@increment_339":{"entryPoint":null,"id":339,"parameterSlots":1,"returnSlots":0},"@increment_449":{"entryPoint":384,"id":449,"parameterSlots":0,"returnSlots":0},"@number_399":{"entryPoint":null,"id":399,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@pause_458":{"entryPoint":368,"id":458,"parameterSlots":0,"returnSlots":0},"@paused_164":{"entryPoint":null,"id":164,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":350,"id":68,"parameterSlots":0,"returnSlots":0},"@reset_482":{"entryPoint":500,"id":482,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":557,"id":91,"parameterSlots":1,"returnSlots":0},"@unpause_467":{"entryPoint":332,"id":467,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":1251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1299,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:2943:6","nodeType":"YulBlock","src":"0:2943:6","statements":[{"nativeSrc":"6:3:6","nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nativeSrc":"115:76:6","nodeType":"YulBlock","src":"115:76:6","statements":[{"nativeSrc":"125:26:6","nodeType":"YulAssignment","src":"125:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:6","nodeType":"YulIdentifier","src":"137:9:6"},{"kind":"number","nativeSrc":"148:2:6","nodeType":"YulLiteral","src":"148:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:6","nodeType":"YulIdentifier","src":"133:3:6"},"nativeSrc":"133:18:6","nodeType":"YulFunctionCall","src":"133:18:6"},"variableNames":[{"name":"tail","nativeSrc":"125:4:6","nodeType":"YulIdentifier","src":"125:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:6","nodeType":"YulIdentifier","src":"167:9:6"},{"name":"value0","nativeSrc":"178:6:6","nodeType":"YulIdentifier","src":"178:6:6"}],"functionName":{"name":"mstore","nativeSrc":"160:6:6","nodeType":"YulIdentifier","src":"160:6:6"},"nativeSrc":"160:25:6","nodeType":"YulFunctionCall","src":"160:25:6"},"nativeSrc":"160:25:6","nodeType":"YulExpressionStatement","src":"160:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14:177:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:6","nodeType":"YulTypedName","src":"84:9:6","type":""},{"name":"value0","nativeSrc":"95:6:6","nodeType":"YulTypedName","src":"95:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:6","nodeType":"YulTypedName","src":"106:4:6","type":""}],"src":"14:177:6"},{"body":{"nativeSrc":"291:92:6","nodeType":"YulBlock","src":"291:92:6","statements":[{"nativeSrc":"301:26:6","nodeType":"YulAssignment","src":"301:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"313:9:6","nodeType":"YulIdentifier","src":"313:9:6"},{"kind":"number","nativeSrc":"324:2:6","nodeType":"YulLiteral","src":"324:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"309:3:6","nodeType":"YulIdentifier","src":"309:3:6"},"nativeSrc":"309:18:6","nodeType":"YulFunctionCall","src":"309:18:6"},"variableNames":[{"name":"tail","nativeSrc":"301:4:6","nodeType":"YulIdentifier","src":"301:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"343:9:6","nodeType":"YulIdentifier","src":"343:9:6"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"368:6:6","nodeType":"YulIdentifier","src":"368:6:6"}],"functionName":{"name":"iszero","nativeSrc":"361:6:6","nodeType":"YulIdentifier","src":"361:6:6"},"nativeSrc":"361:14:6","nodeType":"YulFunctionCall","src":"361:14:6"}],"functionName":{"name":"iszero","nativeSrc":"354:6:6","nodeType":"YulIdentifier","src":"354:6:6"},"nativeSrc":"354:22:6","nodeType":"YulFunctionCall","src":"354:22:6"}],"functionName":{"name":"mstore","nativeSrc":"336:6:6","nodeType":"YulIdentifier","src":"336:6:6"},"nativeSrc":"336:41:6","nodeType":"YulFunctionCall","src":"336:41:6"},"nativeSrc":"336:41:6","nodeType":"YulExpressionStatement","src":"336:41:6"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"196:187:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"260:9:6","nodeType":"YulTypedName","src":"260:9:6","type":""},{"name":"value0","nativeSrc":"271:6:6","nodeType":"YulTypedName","src":"271:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"282:4:6","nodeType":"YulTypedName","src":"282:4:6","type":""}],"src":"196:187:6"},{"body":{"nativeSrc":"489:102:6","nodeType":"YulBlock","src":"489:102:6","statements":[{"nativeSrc":"499:26:6","nodeType":"YulAssignment","src":"499:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"511:9:6","nodeType":"YulIdentifier","src":"511:9:6"},{"kind":"number","nativeSrc":"522:2:6","nodeType":"YulLiteral","src":"522:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"507:3:6","nodeType":"YulIdentifier","src":"507:3:6"},"nativeSrc":"507:18:6","nodeType":"YulFunctionCall","src":"507:18:6"},"variableNames":[{"name":"tail","nativeSrc":"499:4:6","nodeType":"YulIdentifier","src":"499:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"541:9:6","nodeType":"YulIdentifier","src":"541:9:6"},{"arguments":[{"name":"value0","nativeSrc":"556:6:6","nodeType":"YulIdentifier","src":"556:6:6"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"572:3:6","nodeType":"YulLiteral","src":"572:3:6","type":"","value":"160"},{"kind":"number","nativeSrc":"577:1:6","nodeType":"YulLiteral","src":"577:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"568:3:6","nodeType":"YulIdentifier","src":"568:3:6"},"nativeSrc":"568:11:6","nodeType":"YulFunctionCall","src":"568:11:6"},{"kind":"number","nativeSrc":"581:1:6","nodeType":"YulLiteral","src":"581:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"564:3:6","nodeType":"YulIdentifier","src":"564:3:6"},"nativeSrc":"564:19:6","nodeType":"YulFunctionCall","src":"564:19:6"}],"functionName":{"name":"and","nativeSrc":"552:3:6","nodeType":"YulIdentifier","src":"552:3:6"},"nativeSrc":"552:32:6","nodeType":"YulFunctionCall","src":"552:32:6"}],"functionName":{"name":"mstore","nativeSrc":"534:6:6","nodeType":"YulIdentifier","src":"534:6:6"},"nativeSrc":"534:51:6","nodeType":"YulFunctionCall","src":"534:51:6"},"nativeSrc":"534:51:6","nodeType":"YulExpressionStatement","src":"534:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"388:203:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"458:9:6","nodeType":"YulTypedName","src":"458:9:6","type":""},{"name":"value0","nativeSrc":"469:6:6","nodeType":"YulTypedName","src":"469:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"480:4:6","nodeType":"YulTypedName","src":"480:4:6","type":""}],"src":"388:203:6"},{"body":{"nativeSrc":"666:216:6","nodeType":"YulBlock","src":"666:216:6","statements":[{"body":{"nativeSrc":"712:16:6","nodeType":"YulBlock","src":"712:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"721:1:6","nodeType":"YulLiteral","src":"721:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"724:1:6","nodeType":"YulLiteral","src":"724:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"714:6:6","nodeType":"YulIdentifier","src":"714:6:6"},"nativeSrc":"714:12:6","nodeType":"YulFunctionCall","src":"714:12:6"},"nativeSrc":"714:12:6","nodeType":"YulExpressionStatement","src":"714:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"687:7:6","nodeType":"YulIdentifier","src":"687:7:6"},{"name":"headStart","nativeSrc":"696:9:6","nodeType":"YulIdentifier","src":"696:9:6"}],"functionName":{"name":"sub","nativeSrc":"683:3:6","nodeType":"YulIdentifier","src":"683:3:6"},"nativeSrc":"683:23:6","nodeType":"YulFunctionCall","src":"683:23:6"},{"kind":"number","nativeSrc":"708:2:6","nodeType":"YulLiteral","src":"708:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"679:3:6","nodeType":"YulIdentifier","src":"679:3:6"},"nativeSrc":"679:32:6","nodeType":"YulFunctionCall","src":"679:32:6"},"nativeSrc":"676:52:6","nodeType":"YulIf","src":"676:52:6"},{"nativeSrc":"737:36:6","nodeType":"YulVariableDeclaration","src":"737:36:6","value":{"arguments":[{"name":"headStart","nativeSrc":"763:9:6","nodeType":"YulIdentifier","src":"763:9:6"}],"functionName":{"name":"calldataload","nativeSrc":"750:12:6","nodeType":"YulIdentifier","src":"750:12:6"},"nativeSrc":"750:23:6","nodeType":"YulFunctionCall","src":"750:23:6"},"variables":[{"name":"value","nativeSrc":"741:5:6","nodeType":"YulTypedName","src":"741:5:6","type":""}]},{"body":{"nativeSrc":"836:16:6","nodeType":"YulBlock","src":"836:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"845:1:6","nodeType":"YulLiteral","src":"845:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"848:1:6","nodeType":"YulLiteral","src":"848:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"838:6:6","nodeType":"YulIdentifier","src":"838:6:6"},"nativeSrc":"838:12:6","nodeType":"YulFunctionCall","src":"838:12:6"},"nativeSrc":"838:12:6","nodeType":"YulExpressionStatement","src":"838:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"795:5:6","nodeType":"YulIdentifier","src":"795:5:6"},{"arguments":[{"name":"value","nativeSrc":"806:5:6","nodeType":"YulIdentifier","src":"806:5:6"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"821:3:6","nodeType":"YulLiteral","src":"821:3:6","type":"","value":"160"},{"kind":"number","nativeSrc":"826:1:6","nodeType":"YulLiteral","src":"826:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"817:3:6","nodeType":"YulIdentifier","src":"817:3:6"},"nativeSrc":"817:11:6","nodeType":"YulFunctionCall","src":"817:11:6"},{"kind":"number","nativeSrc":"830:1:6","nodeType":"YulLiteral","src":"830:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"813:3:6","nodeType":"YulIdentifier","src":"813:3:6"},"nativeSrc":"813:19:6","nodeType":"YulFunctionCall","src":"813:19:6"}],"functionName":{"name":"and","nativeSrc":"802:3:6","nodeType":"YulIdentifier","src":"802:3:6"},"nativeSrc":"802:31:6","nodeType":"YulFunctionCall","src":"802:31:6"}],"functionName":{"name":"eq","nativeSrc":"792:2:6","nodeType":"YulIdentifier","src":"792:2:6"},"nativeSrc":"792:42:6","nodeType":"YulFunctionCall","src":"792:42:6"}],"functionName":{"name":"iszero","nativeSrc":"785:6:6","nodeType":"YulIdentifier","src":"785:6:6"},"nativeSrc":"785:50:6","nodeType":"YulFunctionCall","src":"785:50:6"},"nativeSrc":"782:70:6","nodeType":"YulIf","src":"782:70:6"},{"nativeSrc":"861:15:6","nodeType":"YulAssignment","src":"861:15:6","value":{"name":"value","nativeSrc":"871:5:6","nodeType":"YulIdentifier","src":"871:5:6"},"variableNames":[{"name":"value0","nativeSrc":"861:6:6","nodeType":"YulIdentifier","src":"861:6:6"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"596:286:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"632:9:6","nodeType":"YulTypedName","src":"632:9:6","type":""},{"name":"dataEnd","nativeSrc":"643:7:6","nodeType":"YulTypedName","src":"643:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"655:6:6","nodeType":"YulTypedName","src":"655:6:6","type":""}],"src":"596:286:6"},{"body":{"nativeSrc":"934:185:6","nodeType":"YulBlock","src":"934:185:6","statements":[{"body":{"nativeSrc":"973:111:6","nodeType":"YulBlock","src":"973:111:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"994:1:6","nodeType":"YulLiteral","src":"994:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1001:3:6","nodeType":"YulLiteral","src":"1001:3:6","type":"","value":"224"},{"kind":"number","nativeSrc":"1006:10:6","nodeType":"YulLiteral","src":"1006:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"997:3:6","nodeType":"YulIdentifier","src":"997:3:6"},"nativeSrc":"997:20:6","nodeType":"YulFunctionCall","src":"997:20:6"}],"functionName":{"name":"mstore","nativeSrc":"987:6:6","nodeType":"YulIdentifier","src":"987:6:6"},"nativeSrc":"987:31:6","nodeType":"YulFunctionCall","src":"987:31:6"},"nativeSrc":"987:31:6","nodeType":"YulExpressionStatement","src":"987:31:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1038:1:6","nodeType":"YulLiteral","src":"1038:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"1041:4:6","nodeType":"YulLiteral","src":"1041:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"1031:6:6","nodeType":"YulIdentifier","src":"1031:6:6"},"nativeSrc":"1031:15:6","nodeType":"YulFunctionCall","src":"1031:15:6"},"nativeSrc":"1031:15:6","nodeType":"YulExpressionStatement","src":"1031:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1066:1:6","nodeType":"YulLiteral","src":"1066:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1069:4:6","nodeType":"YulLiteral","src":"1069:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1059:6:6","nodeType":"YulIdentifier","src":"1059:6:6"},"nativeSrc":"1059:15:6","nodeType":"YulFunctionCall","src":"1059:15:6"},"nativeSrc":"1059:15:6","nodeType":"YulExpressionStatement","src":"1059:15:6"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"950:5:6","nodeType":"YulIdentifier","src":"950:5:6"},{"arguments":[{"kind":"number","nativeSrc":"961:1:6","nodeType":"YulLiteral","src":"961:1:6","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"957:3:6","nodeType":"YulIdentifier","src":"957:3:6"},"nativeSrc":"957:6:6","nodeType":"YulFunctionCall","src":"957:6:6"}],"functionName":{"name":"eq","nativeSrc":"947:2:6","nodeType":"YulIdentifier","src":"947:2:6"},"nativeSrc":"947:17:6","nodeType":"YulFunctionCall","src":"947:17:6"},"nativeSrc":"944:140:6","nodeType":"YulIf","src":"944:140:6"},{"nativeSrc":"1093:20:6","nodeType":"YulAssignment","src":"1093:20:6","value":{"arguments":[{"name":"value","nativeSrc":"1104:5:6","nodeType":"YulIdentifier","src":"1104:5:6"},{"kind":"number","nativeSrc":"1111:1:6","nodeType":"YulLiteral","src":"1111:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1100:3:6","nodeType":"YulIdentifier","src":"1100:3:6"},"nativeSrc":"1100:13:6","nodeType":"YulFunctionCall","src":"1100:13:6"},"variableNames":[{"name":"ret","nativeSrc":"1093:3:6","nodeType":"YulIdentifier","src":"1093:3:6"}]}]},"name":"increment_t_uint256","nativeSrc":"887:232:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"916:5:6","nodeType":"YulTypedName","src":"916:5:6","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"926:3:6","nodeType":"YulTypedName","src":"926:3:6","type":""}],"src":"887:232:6"},{"body":{"nativeSrc":"1298:228:6","nodeType":"YulBlock","src":"1298:228:6","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1315:9:6","nodeType":"YulIdentifier","src":"1315:9:6"},{"kind":"number","nativeSrc":"1326:2:6","nodeType":"YulLiteral","src":"1326:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1308:6:6","nodeType":"YulIdentifier","src":"1308:6:6"},"nativeSrc":"1308:21:6","nodeType":"YulFunctionCall","src":"1308:21:6"},"nativeSrc":"1308:21:6","nodeType":"YulExpressionStatement","src":"1308:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1349:9:6","nodeType":"YulIdentifier","src":"1349:9:6"},{"kind":"number","nativeSrc":"1360:2:6","nodeType":"YulLiteral","src":"1360:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1345:3:6","nodeType":"YulIdentifier","src":"1345:3:6"},"nativeSrc":"1345:18:6","nodeType":"YulFunctionCall","src":"1345:18:6"},{"kind":"number","nativeSrc":"1365:2:6","nodeType":"YulLiteral","src":"1365:2:6","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"1338:6:6","nodeType":"YulIdentifier","src":"1338:6:6"},"nativeSrc":"1338:30:6","nodeType":"YulFunctionCall","src":"1338:30:6"},"nativeSrc":"1338:30:6","nodeType":"YulExpressionStatement","src":"1338:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1388:9:6","nodeType":"YulIdentifier","src":"1388:9:6"},{"kind":"number","nativeSrc":"1399:2:6","nodeType":"YulLiteral","src":"1399:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1384:3:6","nodeType":"YulIdentifier","src":"1384:3:6"},"nativeSrc":"1384:18:6","nodeType":"YulFunctionCall","src":"1384:18:6"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"1404:34:6","nodeType":"YulLiteral","src":"1404:34:6","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"1377:6:6","nodeType":"YulIdentifier","src":"1377:6:6"},"nativeSrc":"1377:62:6","nodeType":"YulFunctionCall","src":"1377:62:6"},"nativeSrc":"1377:62:6","nodeType":"YulExpressionStatement","src":"1377:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1459:9:6","nodeType":"YulIdentifier","src":"1459:9:6"},{"kind":"number","nativeSrc":"1470:2:6","nodeType":"YulLiteral","src":"1470:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1455:3:6","nodeType":"YulIdentifier","src":"1455:3:6"},"nativeSrc":"1455:18:6","nodeType":"YulFunctionCall","src":"1455:18:6"},{"hexValue":"646472657373","kind":"string","nativeSrc":"1475:8:6","nodeType":"YulLiteral","src":"1475:8:6","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"1448:6:6","nodeType":"YulIdentifier","src":"1448:6:6"},"nativeSrc":"1448:36:6","nodeType":"YulFunctionCall","src":"1448:36:6"},"nativeSrc":"1448:36:6","nodeType":"YulExpressionStatement","src":"1448:36:6"},{"nativeSrc":"1493:27:6","nodeType":"YulAssignment","src":"1493:27:6","value":{"arguments":[{"name":"headStart","nativeSrc":"1505:9:6","nodeType":"YulIdentifier","src":"1505:9:6"},{"kind":"number","nativeSrc":"1516:3:6","nodeType":"YulLiteral","src":"1516:3:6","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1501:3:6","nodeType":"YulIdentifier","src":"1501:3:6"},"nativeSrc":"1501:19:6","nodeType":"YulFunctionCall","src":"1501:19:6"},"variableNames":[{"name":"tail","nativeSrc":"1493:4:6","nodeType":"YulIdentifier","src":"1493:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1124:402:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1275:9:6","nodeType":"YulTypedName","src":"1275:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1289:4:6","nodeType":"YulTypedName","src":"1289:4:6","type":""}],"src":"1124:402:6"},{"body":{"nativeSrc":"1705:182:6","nodeType":"YulBlock","src":"1705:182:6","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1722:9:6","nodeType":"YulIdentifier","src":"1722:9:6"},{"kind":"number","nativeSrc":"1733:2:6","nodeType":"YulLiteral","src":"1733:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1715:6:6","nodeType":"YulIdentifier","src":"1715:6:6"},"nativeSrc":"1715:21:6","nodeType":"YulFunctionCall","src":"1715:21:6"},"nativeSrc":"1715:21:6","nodeType":"YulExpressionStatement","src":"1715:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1756:9:6","nodeType":"YulIdentifier","src":"1756:9:6"},{"kind":"number","nativeSrc":"1767:2:6","nodeType":"YulLiteral","src":"1767:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1752:3:6","nodeType":"YulIdentifier","src":"1752:3:6"},"nativeSrc":"1752:18:6","nodeType":"YulFunctionCall","src":"1752:18:6"},{"kind":"number","nativeSrc":"1772:2:6","nodeType":"YulLiteral","src":"1772:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1745:6:6","nodeType":"YulIdentifier","src":"1745:6:6"},"nativeSrc":"1745:30:6","nodeType":"YulFunctionCall","src":"1745:30:6"},"nativeSrc":"1745:30:6","nodeType":"YulExpressionStatement","src":"1745:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1795:9:6","nodeType":"YulIdentifier","src":"1795:9:6"},{"kind":"number","nativeSrc":"1806:2:6","nodeType":"YulLiteral","src":"1806:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1791:3:6","nodeType":"YulIdentifier","src":"1791:3:6"},"nativeSrc":"1791:18:6","nodeType":"YulFunctionCall","src":"1791:18:6"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"1811:34:6","nodeType":"YulLiteral","src":"1811:34:6","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:6","nodeType":"YulIdentifier","src":"1784:6:6"},"nativeSrc":"1784:62:6","nodeType":"YulFunctionCall","src":"1784:62:6"},"nativeSrc":"1784:62:6","nodeType":"YulExpressionStatement","src":"1784:62:6"},{"nativeSrc":"1855:26:6","nodeType":"YulAssignment","src":"1855:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"1867:9:6","nodeType":"YulIdentifier","src":"1867:9:6"},{"kind":"number","nativeSrc":"1878:2:6","nodeType":"YulLiteral","src":"1878:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1863:3:6","nodeType":"YulIdentifier","src":"1863:3:6"},"nativeSrc":"1863:18:6","nodeType":"YulFunctionCall","src":"1863:18:6"},"variableNames":[{"name":"tail","nativeSrc":"1855:4:6","nodeType":"YulIdentifier","src":"1855:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1531:356:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1682:9:6","nodeType":"YulTypedName","src":"1682:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1696:4:6","nodeType":"YulTypedName","src":"1696:4:6","type":""}],"src":"1531:356:6"},{"body":{"nativeSrc":"2066:181:6","nodeType":"YulBlock","src":"2066:181:6","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2083:9:6","nodeType":"YulIdentifier","src":"2083:9:6"},{"kind":"number","nativeSrc":"2094:2:6","nodeType":"YulLiteral","src":"2094:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2076:6:6","nodeType":"YulIdentifier","src":"2076:6:6"},"nativeSrc":"2076:21:6","nodeType":"YulFunctionCall","src":"2076:21:6"},"nativeSrc":"2076:21:6","nodeType":"YulExpressionStatement","src":"2076:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2117:9:6","nodeType":"YulIdentifier","src":"2117:9:6"},{"kind":"number","nativeSrc":"2128:2:6","nodeType":"YulLiteral","src":"2128:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2113:3:6","nodeType":"YulIdentifier","src":"2113:3:6"},"nativeSrc":"2113:18:6","nodeType":"YulFunctionCall","src":"2113:18:6"},{"kind":"number","nativeSrc":"2133:2:6","nodeType":"YulLiteral","src":"2133:2:6","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"2106:6:6","nodeType":"YulIdentifier","src":"2106:6:6"},"nativeSrc":"2106:30:6","nodeType":"YulFunctionCall","src":"2106:30:6"},"nativeSrc":"2106:30:6","nodeType":"YulExpressionStatement","src":"2106:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2156:9:6","nodeType":"YulIdentifier","src":"2156:9:6"},{"kind":"number","nativeSrc":"2167:2:6","nodeType":"YulLiteral","src":"2167:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2152:3:6","nodeType":"YulIdentifier","src":"2152:3:6"},"nativeSrc":"2152:18:6","nodeType":"YulFunctionCall","src":"2152:18:6"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nativeSrc":"2172:33:6","nodeType":"YulLiteral","src":"2172:33:6","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nativeSrc":"2145:6:6","nodeType":"YulIdentifier","src":"2145:6:6"},"nativeSrc":"2145:61:6","nodeType":"YulFunctionCall","src":"2145:61:6"},"nativeSrc":"2145:61:6","nodeType":"YulExpressionStatement","src":"2145:61:6"},{"nativeSrc":"2215:26:6","nodeType":"YulAssignment","src":"2215:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"2227:9:6","nodeType":"YulIdentifier","src":"2227:9:6"},{"kind":"number","nativeSrc":"2238:2:6","nodeType":"YulLiteral","src":"2238:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2223:3:6","nodeType":"YulIdentifier","src":"2223:3:6"},"nativeSrc":"2223:18:6","nodeType":"YulFunctionCall","src":"2223:18:6"},"variableNames":[{"name":"tail","nativeSrc":"2215:4:6","nodeType":"YulIdentifier","src":"2215:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1892:355:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2043:9:6","nodeType":"YulTypedName","src":"2043:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2057:4:6","nodeType":"YulTypedName","src":"2057:4:6","type":""}],"src":"1892:355:6"},{"body":{"nativeSrc":"2426:166:6","nodeType":"YulBlock","src":"2426:166:6","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2443:9:6","nodeType":"YulIdentifier","src":"2443:9:6"},{"kind":"number","nativeSrc":"2454:2:6","nodeType":"YulLiteral","src":"2454:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2436:6:6","nodeType":"YulIdentifier","src":"2436:6:6"},"nativeSrc":"2436:21:6","nodeType":"YulFunctionCall","src":"2436:21:6"},"nativeSrc":"2436:21:6","nodeType":"YulExpressionStatement","src":"2436:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2477:9:6","nodeType":"YulIdentifier","src":"2477:9:6"},{"kind":"number","nativeSrc":"2488:2:6","nodeType":"YulLiteral","src":"2488:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2473:3:6","nodeType":"YulIdentifier","src":"2473:3:6"},"nativeSrc":"2473:18:6","nodeType":"YulFunctionCall","src":"2473:18:6"},{"kind":"number","nativeSrc":"2493:2:6","nodeType":"YulLiteral","src":"2493:2:6","type":"","value":"16"}],"functionName":{"name":"mstore","nativeSrc":"2466:6:6","nodeType":"YulIdentifier","src":"2466:6:6"},"nativeSrc":"2466:30:6","nodeType":"YulFunctionCall","src":"2466:30:6"},"nativeSrc":"2466:30:6","nodeType":"YulExpressionStatement","src":"2466:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2516:9:6","nodeType":"YulIdentifier","src":"2516:9:6"},{"kind":"number","nativeSrc":"2527:2:6","nodeType":"YulLiteral","src":"2527:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2512:3:6","nodeType":"YulIdentifier","src":"2512:3:6"},"nativeSrc":"2512:18:6","nodeType":"YulFunctionCall","src":"2512:18:6"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nativeSrc":"2532:18:6","nodeType":"YulLiteral","src":"2532:18:6","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nativeSrc":"2505:6:6","nodeType":"YulIdentifier","src":"2505:6:6"},"nativeSrc":"2505:46:6","nodeType":"YulFunctionCall","src":"2505:46:6"},"nativeSrc":"2505:46:6","nodeType":"YulExpressionStatement","src":"2505:46:6"},{"nativeSrc":"2560:26:6","nodeType":"YulAssignment","src":"2560:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"2572:9:6","nodeType":"YulIdentifier","src":"2572:9:6"},{"kind":"number","nativeSrc":"2583:2:6","nodeType":"YulLiteral","src":"2583:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2568:3:6","nodeType":"YulIdentifier","src":"2568:3:6"},"nativeSrc":"2568:18:6","nodeType":"YulFunctionCall","src":"2568:18:6"},"variableNames":[{"name":"tail","nativeSrc":"2560:4:6","nodeType":"YulIdentifier","src":"2560:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2252:340:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2403:9:6","nodeType":"YulTypedName","src":"2403:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2417:4:6","nodeType":"YulTypedName","src":"2417:4:6","type":""}],"src":"2252:340:6"},{"body":{"nativeSrc":"2771:170:6","nodeType":"YulBlock","src":"2771:170:6","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2788:9:6","nodeType":"YulIdentifier","src":"2788:9:6"},{"kind":"number","nativeSrc":"2799:2:6","nodeType":"YulLiteral","src":"2799:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2781:6:6","nodeType":"YulIdentifier","src":"2781:6:6"},"nativeSrc":"2781:21:6","nodeType":"YulFunctionCall","src":"2781:21:6"},"nativeSrc":"2781:21:6","nodeType":"YulExpressionStatement","src":"2781:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2822:9:6","nodeType":"YulIdentifier","src":"2822:9:6"},{"kind":"number","nativeSrc":"2833:2:6","nodeType":"YulLiteral","src":"2833:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2818:3:6","nodeType":"YulIdentifier","src":"2818:3:6"},"nativeSrc":"2818:18:6","nodeType":"YulFunctionCall","src":"2818:18:6"},{"kind":"number","nativeSrc":"2838:2:6","nodeType":"YulLiteral","src":"2838:2:6","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"2811:6:6","nodeType":"YulIdentifier","src":"2811:6:6"},"nativeSrc":"2811:30:6","nodeType":"YulFunctionCall","src":"2811:30:6"},"nativeSrc":"2811:30:6","nodeType":"YulExpressionStatement","src":"2811:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2861:9:6","nodeType":"YulIdentifier","src":"2861:9:6"},{"kind":"number","nativeSrc":"2872:2:6","nodeType":"YulLiteral","src":"2872:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2857:3:6","nodeType":"YulIdentifier","src":"2857:3:6"},"nativeSrc":"2857:18:6","nodeType":"YulFunctionCall","src":"2857:18:6"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nativeSrc":"2877:22:6","nodeType":"YulLiteral","src":"2877:22:6","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nativeSrc":"2850:6:6","nodeType":"YulIdentifier","src":"2850:6:6"},"nativeSrc":"2850:50:6","nodeType":"YulFunctionCall","src":"2850:50:6"},"nativeSrc":"2850:50:6","nodeType":"YulExpressionStatement","src":"2850:50:6"},{"nativeSrc":"2909:26:6","nodeType":"YulAssignment","src":"2909:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"2921:9:6","nodeType":"YulIdentifier","src":"2921:9:6"},{"kind":"number","nativeSrc":"2932:2:6","nodeType":"YulLiteral","src":"2932:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2917:3:6","nodeType":"YulIdentifier","src":"2917:3:6"},"nativeSrc":"2917:18:6","nodeType":"YulFunctionCall","src":"2917:18:6"},"variableNames":[{"name":"tail","nativeSrc":"2909:4:6","nodeType":"YulIdentifier","src":"2909:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2597:344:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2748:9:6","nodeType":"YulTypedName","src":"2748:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2762:4:6","nodeType":"YulTypedName","src":"2762:4:6","type":""}],"src":"2597:344:6"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638456cb59116100665780638456cb59146100f65780638da5cb5b146100fe578063d09de08a14610119578063d826f88f14610121578063f2fde38b1461012957600080fd5b80633c6048ef146100a35780633f4ba83a146100be5780635c975abb146100c8578063715018a6146100e55780638381f58a146100ed575b600080fd5b6100ab61013c565b6040519081526020015b60405180910390f35b6100c661014c565b005b600054600160a01b900460ff1660405190151581526020016100b5565b6100c661015e565b6100ab60025481565b6100c6610170565b6000546040516001600160a01b0390911681526020016100b5565b6100c6610180565b6100c66101f4565b6100c66101373660046104e3565b61022d565b600061014760035490565b905090565b6101546102ab565b61015c610305565b565b6101666102ab565b61015c600061035a565b6101786102ab565b61015c6103aa565b6101886103ed565b610190610446565b600280549060006101a083610513565b91905055506101b3600380546001019055565b60025460405190815233907f70de8034c31e91b3a30e57eac01ac40396721a8183a159e9a0b324a7188386e49060200160405180910390a261015c60018055565b6101fc6102ab565b6000600281905560405133917f16c87ebb1e94c6f651a72ec74217d3d445dd6329a97ea46603f276388ef1719f91a2565b6102356102ab565b6001600160a01b03811661029f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102a88161035a565b50565b6000546001600160a01b0316331461015c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b61030d610493565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103b2610446565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861033d3390565b60026001540361043f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610296565b6002600155565b600054600160a01b900460ff161561015c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610296565b600054600160a01b900460ff1661015c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610296565b6000602082840312156104f557600080fd5b81356001600160a01b038116811461050c57600080fd5b9392505050565b60006001820161053357634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212206f9fcfabd9d469aa4be6288320820824fda982fc77272f9be0aa20868a0ec7ee64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C6048EF EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x8381F58A EQ PUSH2 0xED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x15E JUMP JUMPDEST PUSH2 0xAB PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x180 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x15C PUSH2 0x305 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x166 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x15C PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x15C PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x188 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x190 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1A0 DUP4 PUSH2 0x513 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1B3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x70DE8034C31E91B3A30E57EAC01AC40396721A8183A159E9A0B324A7188386E4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x15C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x16C87EBB1E94C6F651A72EC74217D3D445DD6329A97EA46603F276388EF1719F SWAP2 LOG2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A8 DUP2 PUSH2 0x35A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x30D PUSH2 0x493 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x33D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x533 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x9FCFABD9D469AA4BE6288320820824FD 0xA9 DUP3 0xFC PUSH24 0x272F9BE0AA20868A0EC7EE64736F6C634300081C00330000 ","sourceMap":"284:1038:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:110;;;:::i;:::-;;;160:25:6;;;148:2;133:18;1210:110:5;;;;;;;;972:63;;;:::i;:::-;;1615:84:1;1662:4;1685:7;-1:-1:-1;;;1685:7:1;;;;1615:84;;361:14:6;;354:22;336:41;;324:2;309:18;1615:84:1;196:187:6;1824:101:0;;;:::i;391:21:5:-;;;;;;907:59;;;:::i;1201:85:0:-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;534:51:6;;522:2;507:18;1201:85:0;388:203:6;698:167:5;;;:::i;1083:99::-;;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;1210:110:5:-;1260:7;1286:27;:17;918:14:4;;827:112;1286:27:5;1279:34;;1210:110;:::o;972:63::-;1094:13:0;:11;:13::i;:::-;1018:10:5::1;:8;:10::i;:::-;972:63::o:0;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;907:59:5:-:0;1094:13:0;:11;:13::i;:::-;951:8:5::1;:6;:8::i;698:167::-:0;2261:21:2;:19;:21::i;:::-;1239:19:1::1;:17;:19::i;:::-;763:6:5::2;:8:::0;;;:6:::2;:8;::::0;::::2;:::i;:::-;;;;;;781:29;:17;1032:19:4::0;;1050:1;1032:19;;;945:123;781:29:5::2;851:6;::::0;825:33:::2;::::0;160:25:6;;;839:10:5::2;::::0;825:33:::2;::::0;148:2:6;133:18;825:33:5::2;;;;;;;2303:20:2::0;1716:1;2809:22;;2629:209;1083:99:5;1094:13:0;:11;:13::i;:::-;1136:1:5::1;1127:6;:10:::0;;;1152:23:::1;::::0;1164:10:::1;::::0;1152:23:::1;::::0;::::1;1083:99::o:0;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;1326:2:6;2154:73:0::1;::::0;::::1;1308:21:6::0;1365:2;1345:18;;;1338:30;1404:34;1384:18;;;1377:62;-1:-1:-1;;;1455:18:6;;;1448:36;1501:19;;2154:73:0::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1733:2:6;1414:68:0;;;1715:21:6;;;1752:18;;;1745:30;1811:34;1791:18;;;1784:62;1863:18;;1414:68:0;1531:356:6;2433:117:1;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;;;2491:15:1::1;::::0;;2521:22:::1;719:10:3::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;552:32:6;;;534:51;;522:2;507:18;2521:22:1::1;;;;;;;2433:117::o:0;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;;;2245:14:1::1;-1:-1:-1::0;;;2245:14:1::1;::::0;;2274:20:::1;2281:12;719:10:3::0;;640:96;2336:287:2;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;2094:2:6;2460:63:2;;;2076:21:6;2133:2;2113:18;;;2106:30;2172:33;2152:18;;;2145:61;2223:18;;2460:63:2;1892:355:6;2460:63:2;1759:1;2598:7;:18;2336:287::o;1767:106:1:-;1662:4;1685:7;-1:-1:-1;;;1685:7:1;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;2454:2:6;1828:38:1;;;2436:21:6;2493:2;2473:18;;;2466:30;-1:-1:-1;;;2512:18:6;;;2505:46;2568:18;;1828:38:1;2252:340:6;1945:106:1;1662:4;1685:7;-1:-1:-1;;;1685:7:1;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;2799:2:6;2003:41:1;;;2781:21:6;2838:2;2818:18;;;2811:30;-1:-1:-1;;;2857:18:6;;;2850:50;2917:18;;2003:41:1;2597:344:6;596:286;655:6;708:2;696:9;687:7;683:23;679:32;676:52;;;724:1;721;714:12;676:52;750:23;;-1:-1:-1;;;;;802:31:6;;792:42;;782:70;;848:1;845;838:12;782:70;871:5;596:286;-1:-1:-1;;;596:286:6:o;887:232::-;926:3;947:17;;;944:140;;1006:10;1001:3;997:20;994:1;987:31;1041:4;1038:1;1031:15;1069:4;1066:1;1059:15;944:140;-1:-1:-1;1111:1:6;1100:13;;887:232::o"},"methodIdentifiers":{"getIncrementCount()":"3c6048ef","increment()":"d09de08a","number()":"8381f58a","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","reset()":"d826f88f","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startingValue\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"NumberChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"}],\"name\":\"NumberReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getIncrementCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"Counter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/Counter.sol\":{\"keccak256\":\"0x62fadbe20dac2ca7073b1c23bb4d9b019be6277f9e0e686382e334f88d00bf2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d5e2c626b9febaa68b5e283ad0649b5cd145d9591d9c78fd297b77ad0e1f973\",\"dweb:/ipfs/QmSEXTg4qySs5spDyRqpq9eX63VagKuc168tv6yAV3KFDq\"]}},\"version\":1}"}}}}}